#@(#) Makefile started by makeout(1) 2020-07-05 22:13:24
# generated by:   ... John S. Urban
NULL=

TESTPROGFILES =  \
 ../test/test_suite_M_framework__journal.f90 \
 ../test/test_suite_M_framework__msg.f90 \
 ../test/test_suite_M_framework__verify.f90 \
$(NULL)

PROGFILES = \
 ../example/demo_str.f90 \
 ../example/demo_assert.f90 \
 ../example/demo_fstop.f90 \
 ../example/demo_M_framework__verify.f90 \
 ../example/demo_pdec.f90 \
 ../example/demo_wrt.f90 \
 ../example/demo_stderr.f90 \
 ../example/demo_unit_check.f90 \
 ../example/demo_unit_check_bad.f90 \
 ../example/demo_unit_check_done.f90 \
 ../example/demo_unit_check_good.f90 \
 ../example/demo_unit_check_msg.f90 \
 ../example/demo_unit_check_start.f90 \
 ../example/demo_journal.f90 \
 ../example/demo_M_framework__journal.f90 \
 ../example/demo_help_command.f90 \
$(NULL)

CPROGFILES = 
PROG = ${PROGFILES:.f90=}
CPROG = ${CPROGFILES:.c=}
TPROG = ${TESTPROGFILES:.f90=}
SRCS =  M_framework.f90 M_framework__msg.F90 M_framework__journal.f90 \
	M_framework__verify.F90 M_framework__help.f90 M_framework__utility.f90 \
	M_framework__approx.F90
OBJS =  M_framework.o M_framework__msg.o    M_framework__journal.o \
	M_framework__verify.o   M_framework__help.o   M_framework__utility.o \
	M_framework__approx.F90
LIBRARY = libM__framework.a
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
# platform-specific values you will probably change
# 
LIBS := -L. -lM__framework
CC := cc
CFLAGS := -O
FC := gfortran
LDFLAGS := 
# 
# You can either ignore it, or disable the "may be used uninitialized"
# warnings with -Wno-maybe-uninitialized or compile with optimizations
# (-O1 and more).
gfortran: F90=gfortran
gfortran: FFLAGS := -O -fPIC \
   -g -O -Wall -std=f2018 -Wextra -Wno-maybe-uninitialized -Wno-uninitialized \
  -Wimplicit-interface -fmax-errors=1 -fbounds-check -fcheck-array-temporaries \
  -march=native -ffast-math -funroll-loops\
  -fbacktrace
gfortran: all
	@echo built with $(F90)

nvfortran: F90=nvfortran
nvfortran: F90FLAGS := -Minform=inform -Mbackslash -traceback
nvfortran: all
	@echo built with $(F90)

ifort: F90=ifort
ifort: F90FLAGS := -warn all -traceback
ifort: all
	@echo built with $(F90)

nagfor: F90=nagfor
nagfor: F90FLAGS := -C all
nagfor: all
	@echo built with $(F90)
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
#all: $(OBJS) $(LIBRARY) $(PROGFILES) $(TESTPROGFILES) $(PROG)
all: $(LIBRARY) $(PROG) $(CPROG)
	: That is all Folks!
$(PROG): $(OBJS)
	-$(FC) $(LDFLAGS) $@.f90 -o $@ $(OBJS) $(LIBS)||echo "ouch: $@.f90 "
$(PROGFILES): $(LIBRARY)
	-$(FC) $(LDFLAGS) $@ -o $* $(LIBS)
	: $*
$(TESTPROGFILES): $(LIBRARY)
	-$(FC) $(LDFLAGS) $@ -o $* $(LIBS)
	: $*
$(LIBRARY): $(OBJS)
	$(AR) $(ARFLAGS) $@ $^
.SUFFIXES: $(SUFFIXES) .f90 .F90 
.f90.o:
	$(FC) $(FFLAGS) -c $<
.F90.o:
	$(FC) $(FFLAGS) -c $<
#=================================================================================
clean:
	-rm -f $(PROG) $(TPROG) $(CPROG) $(OBJS) *.mod $(LIBRARY) *.o
	-rm -f mytrail.txt trail
#=================================================================================
.PHONY: help
help:
	: make    '-- build M_framework modules'
	: run     '-- run manpage demo programs and test program'
	: test    '-- run test program'
	: man     '-- show all manpages as text'
	: clean   '-- clean directory of object files and executables'
	: doxygen '-- run doxygen(1) if you have it'
	: help    '-- display this text'
#=================================================================================
.PHONY: run
run: $(PROG) $(CPROG)
	# run everything
	@echo $? |xargs -n 1|xargs -iXX env XX
#=================================================================================
.PHONY: test
test: $(TPROG)
	# run everything
	@echo $? |xargs -n 1|xargs -iXX env XX
#=================================================================================
.PHONY: man
man:
	@test -d ../man  || ( echo 'manpages must be expanded into ../man'; exit)
	@mandb ../man 1>&2
	@env MANPATH=../man MANWIDTH=256 man -k .|col -b
	@env MANWIDTH=80 MANPATH=../man MANWIDTH=80  man -Tutf8 --regex '.*'|col -b
#=================================================================================
.PHONY: doxygen
doxygen: 
	doxygen dox.in
#=================================================================================
M_framework__journal.o: M_framework__msg.o 
M_framework__help.o: M_framework__journal.o
M_framework__verify.o: M_framework__journal.o M_framework__msg.o 
M_framework.o: M_framework__journal.o M_framework__msg.o M_framework__verify.o \
	M_framework__help.o M_framework__utility.o M_framework__approx.o 
