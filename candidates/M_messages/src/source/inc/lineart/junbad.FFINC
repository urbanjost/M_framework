$ifdef F90
$!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
$BLOCK COMMENT -file junbad.3m_messages.man
NAME
     junbad(3f) - [M_messages] print an eye-catching image of a skull.
     (LICENSE:PD)

SYNOPSIS
   SUBROUTINE junbad(where)

    character(len=*),intent(in) :: where

DESCRIPTION

   Calls JOURNAL(3f) to print an eye-catching lineart image of a skill.
   Typically used to indicate an error has occurred in a program.

OPTIONS
   where  String used to indicate output disposition. See the description
          of JOURNAL() for a meaning for the I/O flag. To write to stdout
          use 's'.

EXAMPLE
   Example program:

      program demo_junbad
      use M_messages, only : junbad
         call junbad('s')
      end program demo_junbad

   Expected output:

      >           _,.-----.,_
      >         ,-~           ~-.
      >       ,^___           ___^.
      >      /~"   ~"   .   "~   "~\
      >     Y  ,--._    I    _.--.  Y
      >     | Y     ~-. | ,-~     Y |
      >     | |        }:{        | |
      >     j l       / | \       ! l
      >  .-~  (__,.--" .^. "--.,__)  ~-.
      > (           / / | \ \           )
      >  \.____,   ~  \/"\/  ~   .____,/
      >   ^.____                 ____.^
      >      | |T ~\  !   !  /~ T| |
      >      | |l   _ _ _ _ _   !| |
      >      | l \/V V V V V V\/ j |
      >      l  \ \|_|_|_|_|_|/ /  !
      >       \  \[T T T T T TI/  /
      >        \  `^-^-^-^-^-^`  /
      >         \               /
      >          \.           ,/
      >            "^-.___,-^"
AUTHOR
   John S. Urban
LICENSE
   Public License
$BLOCK END
$!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
!===================================================================================================================================
!()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()!
!===================================================================================================================================
subroutine junbad(where)
use M_journal, only: journal
implicit none
character(len=*),parameter :: ident="@(#)M_messages::junbad(3f):print eye-catching ASCII graphic (skull)"
character(len=*),intent(in) :: where
integer                     :: i
!   some compilers use \ as an escape character, so change \ to \\ if have problems
character(len=*),parameter    :: picture(23)=[&
&'           _,.-----.,_              ',&
&'         ,-~           ~-.          ',&
&'       ,^___           ___^.        ',&
&'      /~"   ~"   .   "~   "~\       ',&
&'     Y  ,--._    I    _.--.  Y      ',&
&'     | Y     ~-. | ,-~     Y |      ',&
&'     | |        }:{        | |      ',&
&'     j l       / | \       ! l      ',&
&'  .-~  (__,.--" .^. "--.,__)  ~-.   ',&
&' (           / / | \ \           )  ',&
&'  \.____,   ~  \/"\/  ~   .____,/   ',&
&'   ^.____                 ____.^    ',&
&'      | |T ~\  !   !  /~ T| |       ',&
&'      | |l   _ _ _ _ _   !| |       ',&
&'      | l \/V V V V V V\/ j |       ',&
&'      l  \ \|_|_|_|_|_|/ /  !       ',&
&'       \  \[T T T T T TI/  /        ',&
&'        \  `^-^-^-^-^-^`  /         ',&
&'         \               /          ',&
&'          \.           ,/           ',&
&'            "^-.___,-^"             ',&
&'            "^-.___,-^"             ',&
&'            "^-.___,-^"             ']
do i=1,size(picture)-2
   call journal(where,picture(i))
enddo
end subroutine junbad
!===================================================================================================================================
!()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()!
!===================================================================================================================================
$ENDIF
$!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
$IFDEF UFPP_TEST

   This begins the section that will be processed by ufpp. Typically it is called by
     ufpp -system -html -i FILENAME
   if $SYSTEM commands are trusted

   UNIT TEST OF junbad

   Set unit test database entry to indicate a test has begun
$SYSTEM goodbad junbad start --section 3 
$SYSTEM mkdir -p tmp/
$!----------------------------------------------------------------------------------------------------------------------------------
$OUTPUT tmp/__junbad_test.f90
program seebad
   use M_messages, only : junbad
   call junbad('s')
end program seebad
$OUTPUT
$!----------------------------------------------------------------------------------------------------------------------------------
   Build test program in standard location
$SYSTEM ccall tmp/__junbad_test.f90

   Execute test program
$SYSTEM __junbad > tmp/produced.txt
$!----------------------------------------------------------------------------------------------------------------------------------
$OUTPUT tmp/expected.txt
           _,.-----.,_              
         ,-~           ~-.          
       ,^___           ___^.        
      /~"   ~"   .   "~   "~\       
     Y  ,--._    I    _.--.  Y      
     | Y     ~-. | ,-~     Y |      
     | |        }:{        | |      
     j l       / | \       ! l      
  .-~  (__,.--" .^. "--.,__)  ~-.   
 (           / / | \ \           )  
  \.____,   ~  \/"\/  ~   .____,/   
   ^.____                 ____.^    
      | |T ~\  !   !  /~ T| |       
      | |l   _ _ _ _ _   !| |       
      | l \/V V V V V V\/ j |       
      l  \ \|_|_|_|_|_|/ /  !       
       \  \[T T T T T TI/  /        
        \  `^-^-^-^-^-^`  /         
         \               /          
          \.           ,/           
            "^-.___,-^"             
$OUTPUT
$!----------------------------------------------------------------------------------------------------------------------------------
$SYSTEM diff tmp/produced.txt tmp/expected.txt
$SYSTEM goodbad junbad good --section 3 
$SYSTEM rm `which __junbad`
$ENDIF
$!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
