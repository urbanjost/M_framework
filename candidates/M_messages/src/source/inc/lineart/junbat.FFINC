$ifdef F90
$!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
$BLOCK COMMENT -file junbat.3m_messages.man
NAME
     junbat(3f) - [M_messages] print an eye-catching image of a bat.
     (LICENSE:PD)

SYNOPSIS
  SUBROUTINE junbat(where)

   character(len=*),intent(in) :: where

DESCRIPTION
 Sample output:

  >                     .-                    .-
  >                _..-'(                       )`-.._
  >             ./'. '||\\.       (\_/)       .//||` .`\.
  >          ./'.|'.'||||\\|..    )o o(    ..|//||||`.`|.`\.
  >       ./'..|'.|| |||||\`````` '`"'` ''''''/||||| ||.`|..`\.
  >     ./'.||'.|||| ||||||||||||.     .|||||||||||| ||||.`||.`\.
  >    /'|||'.|||||| ||||||||||||{     }|||||||||||| ||||||.`|||`\
  >   '.|||'.||||||| ||||||||||||{     }|||||||||||| |||||||.`|||.`
  >  '.||| ||||||||| |/'   ``\||``     ''||/''   `\| ||||||||| |||.`
  >  |/' \./'     `\./         \!|\   /|!/         \./'     `\./ `\|
  >  V    V         V          }' `\ /' `{          V         V    V
  >  `    `         `               V               '         '    '

 See the description of JOURNAL() for a meaning for the I/O flag.

EXAMPLE
 Sample program:

   program demo_junbad
   use M_messages, only : junbat
      call junbat('s')
   end program demo_junbad

AUTHOR
   John S. Urban
LICENSE
   Public License
$BLOCK END
$!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
$BLOCK COMMENT
PROCEDURE:   junbat(3f)
DESCRIPTION: print eye-catching ASCII graphic (bat)
AUTHOR:      John S. Urban
VERSION:     1.0, 20130401
$BLOCK END
$!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
!===================================================================================================================================
!()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()!
!===================================================================================================================================
subroutine junbat(where)
use M_journal, only : journal
character(len=*),parameter :: ident="@(#)M_messages::junbat(3f):print eye-catching ASCII graphic (bat)"
character(len=*),intent(in)   :: where ! the I/O flag to pass on to journal()
call journal(where,"                      .-                    .-                       ")
call journal(where,"                 _..-'(                       )`-.._                 ")
call journal(where,"              ./'. '||\\.       (\_/)       .//||` .`\.              ")
call journal(where,"           ./'.|'.'||||\\|..    )o o(    ..|//||||`.`|.`\.           ")
call journal(where,"        ./'..|'.|| |||||\`````` '`v'` ''''''/||||| ||.`|..`\.        ")
call journal(where,"      ./'.||'.|||| ||||||||||||.     .|||||||||||| ||||.`||.`\.      ")
call journal(where,"     /'|||'.|||||| ||||||||||||{     }|||||||||||| ||||||.`|||`\     ")
call journal(where,"    '.|||'.||||||| ||||||||||||{     }|||||||||||| |||||||.`|||.`    ")
call journal(where,"   '.||| ||||||||| |/'   ``\||``     ''||/''   `\| ||||||||| |||.`   ")
call journal(where,"   |/' \./'     `\./         \!|\   /|!/         \./'     `\./ `\|   ")
call journal(where,"   V    V         V          }' `\ /' `{          V         V    V   ")
call journal(where,"   `    `         `               V               '         '    '   ")
end subroutine junbat
!===================================================================================================================================
!()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()!
!===================================================================================================================================
$ENDIF
$!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
$IFDEF UFPP_TEST
 This begins the section that will be processed by ufpp. Typically it is called by
   ufpp -system -html -i FILENAME
 if $SYSTEM commands are trusted

 UNIT TEST OF junbat
$SYSTEM goodbad junbat start --section 3 
$SYSTEM mkdir -p tmp/
        Build test program in standard location
$!----------------------------------------------------------------------------------------------------------------------------------
$OUTPUT tmp/__junbat.f90
   program seepic
   use M_messages, only : junbat
      call junbat('s')
   end program seepic
$OUTPUT
$!----------------------------------------------------------------------------------------------------------------------------------
$SYSTEM ccall tmp/__junbat.f90
$SYSTEM goodbad junbat good --section 3 
        Execute test program
$SYSTEM __junbat >tmp/junbat.out
$ENDIF
$!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
