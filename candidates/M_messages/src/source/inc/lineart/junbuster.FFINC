$ifdef F90
$!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
$BLOCK COMMENT -file junbuster.3m_messages.man
NAME
     junbuster(3f) - [M_messages] call journal(3f) to print eye-catching ASCII graphic (ghostbuster)
     (LICENSE:PD)

SYNOPSIS

      SUBROUTINE junbuster(where)

       character(len=*),intent(in) :: where

DESCRIPTION

 Sample output:

  >                        __---__
  >                     _-       _--______
  >                __--( /     \ )XXXXXXXXXXXXX_
  >              --XXX(   O   O  )XXXXXXXXXXXXXXX-
  >             /XXX(       U     )        XXXXXXX  >           /XXXXX(              )--_  XXXXXXXXXXX  >          /XXXXX/ (      O     )   XXXXXX   \XXXXX  >          XXXXX/   /            XXXXXX   \__ \XXXXX----
  >          XXXXXX__/          XXXXXX         \__----  -
  >  ---___  XXX__/          XXXXXX      \__         ---
  >    --  --__/   ___/\  XXXXXX            /  ___---=
  >      -_    ___/    XXXXXX              '--- XXXXXX
  >        --\/XXX\ XXXXXX                      /XXXXX
  >          \XXXXXXXXX                        /XXXXX/
  >           \XXXXXX                        _/XXXXX/
  >             \XXXXX--__/              __-- XXXX/
  >              --XXXXXXX---------------  XXXXX--
  >                 \XXXXXXXXXXXXXXXXXXXXXXXX-
  >                   --XXXXXXXXXXXXXXXXXX-


 See the description of JOURNAL() for a meaning for the I/O flag.

EXAMPLE
 Sample program:

   program demo_junbuster
   use M_messages, only : junbuster
      call junbuster('s')
   end program demo_junbuster

AUTHOR
   John S. Urban
LICENSE
   Public License
$BLOCK END
$!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
$BLOCK COMMENT
AUTHORS:     John S. Urban
VERSION:     1.0, 20001130
DESCRIPTION: print eye-catching ASCII graphic (ghostbuster)
$BLOCK END
$!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
!===================================================================================================================================
!()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()!
!===================================================================================================================================
subroutine junbuster(where)
use M_framework__journal, only : journal
implicit none
character(len=*),parameter :: ident="@(#)M_messages::junbuster(3f):print eye-catching ASCII graphic (ghostbuster)"
character(len=*),intent(in)   :: where
!   some compilers use \ as an escape character, so change \ to \\ if have problems
character(len=*),parameter :: picture(19)=[&
&'                       __---__                          ',&
&'                    _-       _--______                  ',&
&'               __--( /     \ )XXXXXXXXXXXXX_            ',&
&'             --XXX(   O   O  )XXXXXXXXXXXXXXX-          ',&
&'            /XXX(       U     )        XXXXXXX\         ',&
&'          /XXXXX(              )--_  XXXXXXXXXXX\       ',&
&'         /XXXXX/ (      O     )   XXXXXX   \XXXXX\      ',&
&'         XXXXX/   /            XXXXXX   \__ \XXXXX----  ',&
&'         XXXXXX__/          XXXXXX         \__----  -   ',&
&' ---___  XXX__/          XXXXXX      \__         ---    ',&
&'   --  --__/   ___/\  XXXXXX            /  ___---=      ',&
&'     -_    ___/    XXXXXX              ''--- XXXXXX      ',&
&'       --\/XXX\ XXXXXX                      /XXXXX      ',&
&'         \XXXXXXXXX                        /XXXXX/      ',&
&'          \XXXXXX                        _/XXXXX/       ',&
&'            \XXXXX--__/              __-- XXXX/         ',&
&'             --XXXXXXX---------------  XXXXX--          ',&
&'                \XXXXXXXXXXXXXXXXXXXXXXXX-              ',&
&'                  --XXXXXXXXXXXXXXXXXX-                 ']
integer                    :: i

do i=1,size(picture)
   call journal(where,picture(i))
end do

end subroutine junbuster
!===================================================================================================================================
!()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()!
!===================================================================================================================================
$ENDIF
$!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
$IFDEF UFPP_TEST
 This begins the section that will be processed by ufpp. Typically it is called by
   ufpp -system -html -i FILENAME
 if $SYSTEM commands are trusted

 UNIT TEST OF junbuster(3f)

$SYSTEM goodbad junbuster start --section 3
$SYSTEM mkdir -p tmp/
        Build test program in standard location
$!----------------------------------------------------------------------------------------------------------------------------------
$OUTPUT tmp/__junbuster.f90
program seebuster
use M_messages, only : junbuster
   call junbuster('s')
end program seebuster
$OUTPUT
$!----------------------------------------------------------------------------------------------------------------------------------
$SYSTEM ccall tmp/__junbuster.f90
        Execute test program
$SYSTEM __junbuster >tmp/junbuster.out
$SYSTEM goodbad junbuster good --section 3
$ENDIF
$!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
