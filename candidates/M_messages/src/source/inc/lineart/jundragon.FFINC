$IFDEF F90
$!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
$BLOCK COMMENT -file jundragon.3m_messages.man
NAME
     jundragon(3f) - [M_messages] fill in a character array with a message
     (LICENSE:PD)

SYNOPSIS
     subroutine jundragon(where,a)

      character(len=*),intent(in) :: where
      character(len=32),intent(in) :: a(8)

DESCRIPTION
   Prints out a pretty message shaped like a dragon puffing smoke

EXAMPLE
  Sample program:

   program demo_sundragon
   use M_messages, only : jundragon
   character(len=32) :: a(8)
      a(1)='Puff, the magic dragon----------'
      a(2)='lived by the sea----------------'
      a(3)='and frolicked in the Autumn mist'
      a(4)='in a land called----------------'
      a(5)='Honiley-------------------------'
      a(6)='--------------------------------'
      a(7)='--------------------------------'
      a(8)='--------------------------------'
      call jundragon('s',a)
   end program demo_sundragon

    >                 \=/,         _-===-_-====-_-===-_-==========-_-====-_
    >                |  @___oo   (  Puff, the magic dragon----------       )_
    >      /\  /\   / (___,,,}_--=  lived by the sea----------------       )
    >     ) /^\) ^\/ _)        =__ and frolicked in the Autumn mist       )
    >     )   /^\/   _)          (_  in a land called----------------      )
    >     )   _ /  / _)            (  Honiley-------------------------      )
    > /\  )/\/ ||  | )_)            (_ --------------------------------       )
    ><  >      |(,,) )__)             (  --------------------------------   )
    > ||      /    \)___)\             ( --------------------------------__)
    > | \____(      )___) )___           -==-_____-=====-_____-=====-___==
    >  \______(_______;;; __;;;
AUTHOR
   John S. Urban
LICENSE
   Public License
$BLOCK END
$!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
$BLOCK COMMENT
AUTHOR:      John S. Urban
VERSION:     1.0, 20001130
$BLOCK END
$!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
!===================================================================================================================================
!()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()!
!===================================================================================================================================
subroutine jundragon(where,a)
use M_framework__journal, only : journal
implicit none
character(len=*),parameter :: ident="@(#)M_messages::jundragon(3f):print eye-catching ASCII graphic (dragon) with message"
character(len=*),intent(in)   :: where ! the I/O flag to pass on to JUN()
   character(len=32)          :: a(8)  ! message of 8 32-character strings
   character(len=80)          :: b(11)
   integer                    :: i
   write(b(01),1)'                \=/,          _-===-_-====-_-===-_-==========-_-====-_'
   write(b(02),1)'                |  @___oo   (  ',a(01),'       )_'
   write(b(03),1)'      /\  /\   / (___,,,}_--=  ',a(02),'       )'
   write(b(04),1)'     ) /^\) ^\/ _)        =__ ',a(03),'       )'
   write(b(05),1)'     )   /^\/   _)          (_  ',a(04),'      )'
   write(b(06),1)'     )   _ /  / _)            (  ',a(05),'      )'
   write(b(07),1)' /\  )/\/ ||  | )_)            (_ ',a(06),'      )'
   write(b(08),1)'<  >      |(,,) )__)             (  ',a(07),'   )'
   write(b(09),1)' ||      /    \)___)\             ( ',a(08),'__)'
   write(b(10),1)' | \____(      )___) )___           -==-_____-=====-_____-=====-___=='
   write(b(11),*)' \______(_______;;; __;;;'
1  format(a,a,a)
   do i=1,11
      call journal(where,b(i))
   enddo
end subroutine jundragon
!===================================================================================================================================
!()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()!
!===================================================================================================================================
$ENDIF
$!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
$IFDEF UFPP_TEST

 This begins the section that will be processed by ufpp. Typically it is called by
   ufpp -system -html -i FILENAME
 if $SYSTEM commands are trusted

 UNIT TEST OF jundragon(3f)
$SYSTEM goodbad jundragon start --section 3
$SYSTEM mkdir -p tmp/
        Build test program in standard location
$!----------------------------------------------------------------------------------------------------------------------------------
$OUTPUT tmp/__jundragon.f90
   program seepic
   use M_messages, only : junbat
      call jundragon('s')
   end program seepic
$OUTPUT
$!----------------------------------------------------------------------------------------------------------------------------------
$SYSTEM ccall tmp/__jundragon.f90
$SYSTEM goodbad jundragon good --section 3
        Execute test program
$SYSTEM __jundragon >tmp/jundragon.out
$SYSTEM rm `which __jundragon` tmp/__jundragon.f90
$ENDIF
$!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
